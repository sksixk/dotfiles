parse_git_branch () {
    git name-rev HEAD 2> /dev/null | sed 's#HEAD\ \(.*\)# (GIT::\1)#'
}

parse_hg_branch() {
    hg branch 2>/dev/null | sed 's#\(.*\)# (HG::\1)#'
}

parse_cvs_branch() {
    if [ -d CVS ] ; then
        #cat CVS/TAG | cut -c 2- 2>/dev/null | sed '#\(.*\)# (cvs::\1)#'
        BRANCH=`cat CVS/TAG 2>/dev/null | cut -c 2- ` ; if [ "$BRANCH" != "" ] ; then echo " (CVS::$BRANCH)" ; else echo " (CVS::HEAD)"; fi
    fi
}

parse_svn_branch() {
  # Capture the output of the "git status" command.
  svn_info="$(svn info | egrep '^URL: ' 2> /dev/null)"

  # Get the name of the branch.
  branch_pattern="^URL: .*/(branches|tags)/([^/]+)"
  trunk_pattern="^URL: .*/trunk(/.*)?$"
  if [[ ${svn_info} =~ $branch_pattern ]]; then
    branch=${BASH_REMATCH[2]}
  elif [[ ${svn_info} =~ $trunk_pattern ]]; then
    branch='trunk'
  fi

  # Set the final branch string.
  echo " (SVN::${branch})"
}

get_branch_information() {
    if [ -e .svn ] ; then
        parse_svn_branch
    elif [ -e CVS ] ; then
        parse_cvs_branch
    else
        parse_git_branch
        parse_hg_branch
    fi
}

RED="\[\033[0;31m\]"
RED_BOLD="\[\033[01;31m\]"
GREEN="\[\033[0;32m\]"
YELLOW="\[\033[0;33m\]"
YELLOW_BOLD="\[\033[1;33m\]"
BLUE="\[\033[01;34m\]"
PURPLE="\[\033[0;35m\]"
CYAN="\[\033[0;36m\]"
WHITE="\[\033[0;37m\]"
BLACK="\[\033[0;38m\]"

# see https://unix.stackexchange.com/questions/124407/what-color-codes-can-i-use-in-my-ps1-prompt about changing the digits below
declare -a color_red_array=(52 124 196 202 214 220 226)
declare -a color_green_array=(22 29 36 44 122 155 148)
declare -a color_blue_array=(17 18 19 21 26 27 32 39)
declare -a color_rainbow_array=(88 166 178 226 154 45 63 93)
declare -a color_rrainbow_array=(93 63 45 154 226 178 166 88)
declare -a color_pink_array=(197 198 199 206 212 213 219 225)
declare -a color_grye_array=(82 85 157 154 226 228 229 230)

NUMBER=$(( $RANDOM % 7 ))
COLORS=(red green blue rainbow rrainbow pink grye)

promptit() {
	COLOR_ARR_NAME=color_${COLORS[$NUMBER]}_array
	COLOR0_EL="$COLOR_ARR_NAME[0]"
	COLOR1_EL="$COLOR_ARR_NAME[1]"
	COLOR2_EL="$COLOR_ARR_NAME[2]"
	COLOR3_EL="$COLOR_ARR_NAME[3]"
	COLOR4_EL="$COLOR_ARR_NAME[4]"
	COLOR5_EL="$COLOR_ARR_NAME[5]"
	COLOR6_EL="$COLOR_ARR_NAME[6]"
	COLOR7_EL="$COLOR_ARR_NAME[7]"

	COLOR1="\[\033[01;38;5;${!COLOR0_EL}m\]"
	COLOR2="\[\033[01;38;5;${!COLOR1_EL}m\]"
	COLOR3="\[\033[01;38;5;${!COLOR2_EL}m\]"
	COLOR4="\[\033[01;38;5;${!COLOR3_EL}m\]"
	COLOR5="\[\033[01;38;5;${!COLOR4_EL}m\]"
	COLOR6="\[\033[01;38;5;${!COLOR5_EL}m\]"
	COLOR7="\[\033[01;38;5;${!COLOR6_EL}m\]"
	COLOR8="\[\033[01;38;5;${!COLOR7_EL}m\]"
	echo "$COLOR1[$COLOR2\d $COLOR3\u$COLOR4@$COLOR5\h $COLOR6\w$COLOR7\$(get_branch_information)$COLOR8 ]$WHITE "
}

export PS1=$(promptit)

